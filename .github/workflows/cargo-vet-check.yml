name: Vet Dependencies
on: 
  # push:
  pull_request:
jobs:
  cargo-vet-check:
      name: Vet Dependencies
      runs-on: ubuntu-latest
      env:
        CARGO_VET_VERSION: 0.3.0
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REPO: ${{ github.repositoryUrl }}
        PR: ${{ github.event.pull_request.number }}
        VET_FAILURE_SUBMIT_ENDPOINT: https://cargo-vet.axo.dev/api/webhooks/receive
        VET_FAILURE_VIEW_ENDPOINT: https://cargo-vet.axo.dev/reports
      steps:
      - uses: actions/checkout@master
      - name: Install Rust
        run: rustup update stable && rustup default stable
      - uses: actions/cache@v2
        with:
          path: ${{ runner.tool_cache }}/cargo-vet
          key: cargo-vet-bin-${{ env.CARGO_VET_VERSION }}
      - name: Add the tool cache directory to the search path
        run: echo "${{ runner.tool_cache }}/cargo-vet/bin" >> $GITHUB_PATH
      - name: Ensure that the tool cache is populated with the cargo-vet binary
        # run: cargo install --root ${{ runner.tool_cache }}/cargo-vet --version ${{ env.CARGO_VET_VERSION }} cargo-vet
        # Currently patching in a fork
        run: cargo install --root ${{ runner.tool_cache }}/cargo-vet --version ${{ env.CARGO_VET_VERSION }} --git https://github.com/Gankra/cargo-vet --branch bots cargo-vet
      - name: Invoke cargo-vet
        # Currently emitting a custom output
        run: cargo vet --locked --output-format=json-full > vet-results.json
        # run: cargo vet --locked --output-format=json > vet-results.json
      - if: ${{ failure() }}
        name: Report Failure
        run: |
          # Parse out the repo fragment from the full "git://github.com/$FRAGMENT.git"
          repo=$(echo ${{ env.REPO }} | sed s,git://github.com/,, | sed s,.git,,)
          echo "repo = $repo"
          
          # Add the repo and PR number to vet's json
          cat vet-results.json | jq --arg repo $repo --arg pr ${{ env.PR }} '. + {repo: $repo, pr: $pr}' > vet-results-final.json
          cat vet-results-final.json
          
          # POST this JSON to cargo
          response=$(cat vet-results-final.json | curl -X POST --data @- ${{ env.VET_FAILURE_SUBMIT_ENDPOINT }})
          echo "resp = $response"
          
          # Grab the ID from the response and construct the new URL
          id=$(echo $response | jq -r '.id')
          view_url="${{ env.VET_FAILURE_VIEW_ENDPOINT }}/$id"
          echo "view_url = $view_url"
          
          # Post a github comment
          message="cargo-vet needs you to audit your dependencies, visit $view_url"
          echo "posting comment:"
          echo $message | gh pr comment ${{ env.PR }} --body-file -
          

